This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.eslintrc.cjs
.gitattributes
.gitignore
App.css
dbconnect.js
index.js
package.json
postcss.config.js
public/index.html
public/vite.svg
README.md
router.js
src/App.jsx
src/assets/react.svg
src/index.css
src/index.js
src/Pages/Local.jsx
tailwind.config.js
vite.config.js
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="dbconnect.js">
const sql= require('mysql');

const sqlconnect= sql.createConnection({
    host:'localhost',
    user:'root',
    password:'',
    database:'practice_db',
    multipleStatements:true
});

sqlconnect.connect((err)=>{
    if(!err){
        console.log('DB connection succeeded');
    } else{
        console.log('DB connection failed');
    }
});

module.exports= sqlconnect;
</file>

<file path="index.js">
const express = require('express');
const bodyParser= require('body-parser');
const cors = require('cors');
const RouterPath = require('./router');

const app = express();

const port = 7000;

app.use(bodyParser.json());
app.use(cors());

app.use('/', RouterPath);


app.listen(port,()=>console.log('server is running on port 7000'));
</file>

<file path="router.js">
const express= require('express');
const sqlDbconnect = require('./dbconnect');

const Router = express.Router();

Router.get('/data', (req, res) =>{
    const userData= [{name:'John', age:30},
                     {name:'Jane', age:25}
                    ];
    res.send(userData);
});

Router.get('/info', (req, res) =>{
    const userData= [{adress:'road1', age:30},
                     {adress:'road2', age:25}
                    ];
    res.send(userData);
});

Router.get("/api/user", (req, res)=>{
    sqlDbconnect.query("select * from  items",(err, rows)=>{
        if(!err)
            {
            res.send(rows);
        }else{
            console.log(err);
        }
    });
});

module.exports = Router;
</file>

<file path=".eslintrc.cjs">
module.exports = {
  root: true,
  env: {
    browser: true,
    node: true,         // âœ… Add this line
    es2020: true
  },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module'
  },
  settings: {
    react: {
      version: '18.2'
    }
  },
  plugins: ['react-refresh'],
  rules: {
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
};
</file>

<file path=".gitattributes">
# Auto detect text files and perform LF normalization
* text=auto
</file>

<file path=".gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
</file>

<file path="App.css">
#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}
</file>

<file path="postcss.config.js">
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}
</file>

<file path="public/index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <title>Vite + React</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>
</file>

<file path="public/vite.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>
</file>

<file path="README.md">
# React + Vite + TailWindCSS - A Template Repo

It is a template repository for you to start a project using React and TailwindCSS. You just need to create a new repository from this template repo by clicking the button at the top right corner of this page.

## Watch This Video

https://www.youtube.com/watch?v=Zk2YJUvfsOA

## Links

- Install Node.js: https://nodejs.org/en
- Install Vite: https://vitejs.dev/
- TailwindCSS: https://tailwindcss.com/
- How to Learn TailwindCSS?: https://www.youtube.com/shorts/BhasK2BPn8c
</file>

<file path="src/assets/react.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>
</file>

<file path="src/index.css">
@tailwind base;
@tailwind components;
@tailwind utilities;
</file>

<file path="src/index.js">
// import React from 'react'
// import ReactDOM from 'react-dom/client'
// import App from './App.jsx'
// import './index.css'
// import { BrowserRouter } from 'react-router-dom';

// ReactDOM.createRoot(document.getElementById('root')).render(
//   <React.StrictMode>
//     <BrowserRouter>
//     <App />
//     </BrowserRouter>
//   </React.StrictMode>,
// )


import React from 'react';
import ReactDOM from 'react-dom/client';
// DO NOT import BrowserRouter here
import App from './App.jsx';
import './index.css';

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
   {/* <BrowserRouter> */}
    {/* <Provider store={store}> */}
    <App />
    {/* </Provider> */}
    {/* </BrowserRouter>    */} 
    
  </React.StrictMode>,
);
</file>

<file path="src/Pages/Local.jsx">
// src/Pages/Local.jsx
import  { useState, useEffect } from 'react';
import axios from 'axios'; // Import axios

function Local() {
  const [data, setData] = useState([]); // State to hold data from '/data'
  const [userInfo, setUserInfo] = useState([]); // State to hold data from '/api/user'
  const [loading, setLoading] = useState(true); // Loading state
  const [error, setError] = useState(null); // Error state

  useEffect(() => {
    const fetchData = async () => {
      try {
        // Fetch from /data
        const responseData = await axios.get('http://localhost:7000/data');
        setData(responseData.data);

        // Fetch from /api/user
        const responseUserInfo = await axios.get('http://localhost:7000/api/user');
        setUserInfo(responseUserInfo.data);

        setLoading(false);
      } catch (err) {
        console.error("Error fetching data:", err);
        setError("Failed to fetch data. Please check the server and database connection.");
        setLoading(false);
      }
    };

    fetchData();
  }, []); // Empty dependency array means this runs once on mount

  if (loading) {
    return <div className="local-page-container">Loading data...</div>;
  }

  if (error) {
    return <div className="local-page-container" style={{ color: 'red' }}>Error: {error}</div>;
  }

  return (
    <div className="local-page-container">
      <p>hi this is local page</p>

      <h2>Data from `/data` endpoint:</h2>
      {data.length > 0 ? (
        <ul>
          {data.map((item, index) => (
            <li key={index}>Name: {item.name}, Age: {item.age}</li>
          ))}
        </ul>
      ) : (
        <p>No data available from `/data`.</p>
      )}

      <h2>User Info from `/api/user` endpoint:</h2>
      {userInfo.length > 0 ? (
        <ul>
          {userInfo.map((user, index) => (
            <li key={index}>
              ID: {user.id}, Name: {user.name} {/* Adjust these based on your 'items' table columns */}
            </li>
          ))}
        </ul>
      ) : (
        <p>No user info available from `/api/user`.</p>
      )}
    </div>
  );
}

export default Local;
</file>

<file path="tailwind.config.js">
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}"
  ],
  theme: {
    extend: {

      textShadow: {
        'blue': '5px 5px 10px blue',
      },

      keyframes: {
        'tilt-shaking': {
          '0%': { transform: 'rotate(0deg)' },
          '25%': { transform: 'rotate(5deg)' },
          '50%': { transform: 'rotate(0deg)' },
          '75%': { transform: 'rotate(-5deg)' },
          '100%': { transform: 'rotate(0deg)' },
        },
      
        'colorAnimate': {
          '0%': { borderColor: 'salmon' },
          '25%': { borderColor: '#e18ce1' },
          '50%': { borderColor: 'paleturquoise' },
          '75%': { borderColor: 'green' },
          '100%': { borderColor: 'yellow' }
        },
      },


      animation: {
        'tilt-shaking': 'tilt-shaking 0.8s ease infinite',
        'color-animate': 'colorAnimate 5s ease-in 1s infinite',  
      }

    },
  },
  plugins: [],
}
</file>

<file path="vite.config.js">
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})
</file>

<file path="src/App.jsx">
// // src/App.jsx

// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
// import { AuthProvider } from './Pages/Authentication/AuthContext'; 
// import PrivateRoute from './Pages/Authentication/PrivateRoute';

// // --- Your Page Imports ---
// import UtilityStore from './Pages/UtilityStore/UtilityStore';
// import Team from './Pages/Team/Team';
// import DataView from './Pages/DataView/DataView';
// import LoginPage from './Pages/Authentication/LoginPage';
// import RegisterPage from './Pages/Authentication/RegisterPage';
// import DataFetch from './Pages/Authentication/DataFetch';
// import DataPost from './Pages/Authentication/DataPost';
// import UserUpdate from './Pages/Authentication/UserUpdate';
// import ForgotPasswordPage from './Pages/Authentication/ForgotPasswordPage';
// import ResetPasswordPage from './Pages/Authentication/ResetPasswordPage';
// import ProductUpdate from './Pages/Authentication/ProductUpdate'; // <-- 1. IMPORT THE NEW COMPONENT

// // --- Layout Component Imports ---
// import Header from './Components/Header/Header';
// import Footer from './Components/Footer/Footer';

// function App() {
//   return (
//     <Router>
//       <AuthProvider>
//         <Header />
//         <div className="main-content" style={{ minHeight: '80vh' }}>
//           <Routes>
//             {/* ... (Your public routes remain the same) ... */}
//             <Route path="/" element={<UtilityStore />} />
//             <Route path="/UtilityStore" element={<UtilityStore />} />
//             <Route path="/Team" element={<Team />} />
//             <Route path="/Products" element={<DataView />} />
//             <Route path="/login" element={<LoginPage />} />
//             <Route path="/register" element={<RegisterPage />} />
//             <Route path="/forgot-password" element={<ForgotPasswordPage />} />
//             <Route path="/reset-password/:token" element={<ResetPasswordPage />} />

//             {/* ================================================= */}
//             {/*               PROTECTED ROUTES                    */}
//             {/* ================================================= */}
//             <Route path="/DataFetch" element={<PrivateRoute><DataFetch /></PrivateRoute>} />
//             <Route path="/DataPost" element={<PrivateRoute><DataPost /></PrivateRoute>} />
//             <Route path="/userUpdate/:id" element={<PrivateRoute><UserUpdate /></PrivateRoute>} />
            
//             {/* --- 2. ADD THIS NEW ROUTE FOR EDITING PRODUCTS --- */}
//             <Route path="/edit-product/:id" element={<PrivateRoute><ProductUpdate /></PrivateRoute>} />
            
//             <Route path="*" element={<h1>404: Page Not Found</h1>} />
//           </Routes>
//         </div>
//         <Footer />
//       </AuthProvider>
//     </Router>
//   );
// }

// export default App;




// src/App.jsx




import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';

 import Local from './Pages/Local';


function App() {
   return (
            <Router>
              <div>

           <Routes>

            <Route path="/" element={<Local />} />

          </Routes>
         </div>

    </Router>
   );
 }

 export default App;
</file>

<file path="package.json">
{
  "name": "practice",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@reduxjs/toolkit": "^2.8.2",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.2.0",
    "@testing-library/user-event": "^13.5.0",
    "axios": "^1.12.2",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^3.0.2",
    "body-parser": "^2.2.0",
    "cors": "^2.8.5",
    "dotenv": "^16.6.1",
    "express": "^5.1.0",
    "helmet": "^8.1.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.1",
    "multer": "^2.0.2",
    "mysql": "^2.18.1",
    "mysql2": "^3.14.5",
    "path": "^0.12.7",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-hook-form": "^7.56.4",
    "react-redux": "^9.2.0",
    "react-router-dom": "^7.6.1",
    "react-scripts": "5.0.1",
    "redux": "^5.0.1",
    "sql": "^0.78.0",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "server": "nodemon src/mvc/back/server.js",
    "server:prod": "node src/mvc/back/server.js",
    "dev": "concurrently \"npm run server\" \"npm run start\"",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@tailwindcss/postcss": "^4.1.8",
    "autoprefixer": "^10.4.21",
    "concurrently": "^9.2.1",
    "eslint-plugin-react-refresh": "^0.4.20",
    "nodemon": "^3.1.10",
    "postcss": "^8.5.4",
    "tailwindcss": "^3.4.1"
  }
}
</file>

</files>
